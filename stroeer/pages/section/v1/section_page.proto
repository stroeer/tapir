syntax = "proto3";

package stroeer.pages.section.v1;

import "stroeer/core/v1/article.proto";

option go_package = "github.com/stroeer/tapir/go/stroeer/pages/section/v1;section";
option java_multiple_files = true;
option java_package = "de.stroeer.pages.section.v1";

// all data to render an overview page like the homepage or "/politik".
message SectionPage {
  repeated Stage stages = 1;
}

// a block of teasers - can consist of editorial articles, advertisement and/or stages.
message Stage {
  repeated StageItem stage_items = 1;
  StageConfiguration stage_configuration = 2;
}

// rendering data for a stage, currently only a fields map.
// hint: currently doesn't contain the link for a stage, like "Mehr aus Sport".
message StageConfiguration {
  // entry: "stage_title" represents an optional label to be rendered above a Stage, like "CORONAVIRUS".
  // entry: "stage_layout" represents a visual layout, which may affect teasers, colors, and other stylings.
  map<string, string> fields = 1;
}

// Generic item to represent a single teaser in a block of items.
message StageItem {
  // Rendering instruction for the width of an item, relative to the page grid.
  StageItemWidth stage_item_width = 1;
  // At most one field will be set at the same time.
  // The delegate of the StageItem can be another Stage, an editorial article or a Commercial.
  oneof stage_item_type {
    Stage stage = 2;
    ArticleTeaser article_teaser = 3;
    Commercial commercial = 4;
  }
}

// For now a data holder to be able to render a Commercial as part of a Stage.
message Commercial {
  map<string, string> fields = 1;
}

// Bundles the data needed to render a core article as a teaser
message ArticleTeaser {
  stroeer.core.v1.Article article = 1;
  // entry: teaser_layout, marker to use a particular layout in the rendering teaser template.
  // value examples: "default", "hero", "cluster", or "story" - if entry is missing use layout `default`.
  map<string, string> fields = 2;
}

// Rendering info to limit the width of an item, relative to the page grid.
enum StageItemWidth {
  STAGE_ITEM_WIDTH_UNSPECIFIED = 0;
  STAGE_ITEM_WIDTH_FULL = 1;
  STAGE_ITEM_WIDTH_ONE_HALF = 2;
  STAGE_ITEM_WIDTH_ONE_QUARTER = 4;
  STAGE_ITEM_WIDTH_ONE_EIGHTHS = 8;
  STAGE_ITEM_WIDTH_FULL_PAGE = 9;
}
