syntax = "proto3";

/**
 * @FileArticle ⚙︎ StageService
 */

import "stroeer/page/stage/v1/stage.proto";

package stroeer.fragment.v1;

option go_package = "github.com/stroeer/go-tapir/fragment/v1;fragment";

service StageService {
  /**
    ############################################################################
    # Description
    ############################################################################
    Get single stages by requesting them via well-known ids, e.g. "schlagzeilen" or "meistgelesen".

    ############################################################################
    # Status/Error scenario's
    ############################################################################

    scenario: found
    description: service responded without encountering exceptions
    gRPC status: OK
    gRPC error payload: none
    HTTP status: OK
    cacheable: yes

    scenario: internal
    description: internal error while loading data
    gRPC status: INTERNAL
    gRPC error payload: none
    HTTP status: 500
    cacheable: no

    scenario: timeout
    description: timeout while loading data
    gRPC status: DEADLINE_EXCEEDED
    gRPC error payload: none
    HTTP status: 504
    cacheable: no
  **/
  rpc GetStages (GetStagesRequest) returns (GetStagesResponse) {}

  // request data to render Article Companions as individual html for esi integration on ArticlePages
  rpc GetArticleCompanions (GetArticleCompanionsRequest) returns (GetArticleCompanionsResponse) {}
}

// Message to request stages independent of SectionPages, for client side rendering or ESIs
message GetStagesRequest {
  // ids must be well-known to the frontend and backend, for example "schlagzeilen"
  repeated string ids = 1;
}

// token is base64 encoded and contains an index and a section path
message GetArticleCompanionsRequest {
  repeated string token = 1;
}

// contains the actual companions (stages with content), that resulted out of the parameters index and section path
message GetArticleCompanionsResponse {
  repeated stroeer.page.stage.v1.Stage.Item companions = 1;
}

// Message for requesting data for single stages
// All provided ids that could be resolved to stages are part of the response, others are omitted.
message GetStagesResponse {
  repeated stroeer.page.stage.v1.Stage stages = 1;
}

