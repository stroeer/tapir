syntax = "proto3";
/**
 * @FileArticle ⚙︎ ArticleExtenderService
 */

package stroeer.page.article.v1;

import "stroeer/core/v1/article.proto";

option go_package = "buf.build/stroeer/tapir/page/article/v1;article";

/**
 * The ArticleExtenderService provides methods to extend an article with additional information.
 * The main purpose is to retrieve questions for a given article to be rendered in the ArticleExtender Widget on ArticlePages.
 *
 * @CodeBlockStart protobuf
 */
service ArticleExtenderService {
  rpc GetQuestions(GetQuestionsRequest) returns (GetQuestionsResponse) {}
  rpc GetAnswer(GetAnswerRequest) returns (GetAnswerResponse) {}
}
/** @CodeBlockEnd */

/**
 * # `⚙︎ GetQuestions`
 * ```protobuf
 * rpc GetQuestions(GetQuestionsRequest) returns (GetQuestionsResponse) {}
 * ```
 *
 * Returns an array of questions if the given `id` exists, in the vector store,
 * an `Error`, otherwise.
 *
 * | Field name       | Type                | Description                                                           |
 * |------------------|---------------------|-----------------------------------------------------------------------|
 * | `id`             | `int64`             | [required] Unique id of the article, questions should be returned for.|
 *
 * @CodeBlockStart protobuf
 */
message GetQuestionsRequest {
  int64 id = 1;
}

message GetQuestionsResponse {
  repeated string questions = 1;
}

/**
 * # `⚙︎ GetAnswer`
 * ```protobuf
 * rpc GetAnswer(GetAnswerRequest) returns (GetAnswerResponse) {}
 * ```
 *
 * Returns the answer of a question as a string. Otherwise an `Error`.
 *
 * | Field name       | Type                | Description                                       |
 * |------------------|---------------------|---------------------------------------------------|
 * | `question`       | `string`            | [required] The question for the returned answers. |
 * | `article_id`     | `int64`             | [required] The original article the user read.    |
 *
 * @CodeBlockStart protobuf
 */
message GetAnswerRequest {
  string question = 1;
  int64 article_id = 2;
  QuestionSource question_source = 3;
  Accept accept = 4;

  /** @CodeBlockEnd */

  /**
   * ## `enum QuestionSource`
   * Information about the source of the question.
   * User questions must be treated differently than questions that we provided.
   *
   * | Enum value                    | Description                                                  |
   * |-------------------------------|--------------------------------------------------------------|
   * | `QUESTION_SOURCE_UNSPECIFIED` | unspecified                                                  |
   * | `INITIAL_QUESTIONS`           | The question was part of the initial server-side response.   |
   * | `USER`                        | The question is an input from the user.                      |
   *
   *
   * @CodeBlockStart protobuf
   */
  enum QuestionSource {
    QUESTION_SOURCE_UNSPECIFIED = 0;
    INITIAL_QUESTIONS = 1;
    USER = 2;
  }

  /** @CodeBlockEnd */

  /**
   * ## `enum Accept`
   * The client can specify the format of the answer text.
   *
   * | Enum value            | Description                                                  |
   * |-----------------------|--------------------------------------------------------------|
   * | `ACCEPT_UNSPECIFIED`  | unspecified                                                  |
   * | `PLAINTEXT`           | The question was part of the initial server-side response.   |
   * | `MARKDOWN`            | The question is an input from the user.                      |
   *
   *
   * @CodeBlockStart protobuf
   */
  enum Accept {
    ACCEPT_UNSPECIFIED = 0;
    PLAINTEXT = 1;
    MARKDOWN = 2;
  }
}

message GetAnswerResponse {
  string answer = 1;
  repeated stroeer.core.v1.Article sources = 2 [deprecated = true];
  repeated string further_questions = 3;
  repeated int64 source_ids = 4;
}
