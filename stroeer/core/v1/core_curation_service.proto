syntax = "proto3";

/**
 * @FileArticle ⚙︎ CurationService
 */

package stroeer.core.v1;

import "stroeer/core/v1/article.proto";

option go_package = "github.com/stroeer/go-tapir/core/v1;core";
option java_multiple_files = true;
option java_package = "de.stroeer.core.v1";

/**
* ```protobuf
* service ArticleService {
*   // resolve a curation and return the `articles` within this curation
*   rpc GetCuration(GetCurationRequest) returns (GetCurationResponse) {}
*   //
*   rpc BatchGetCuration(BatchGetCurationRequest) returns (BatchGetCurationResponse) {}
* }
* ```
*/
service CurationService {
  rpc GetCuration(GetCurationRequest) returns (GetCurationResponse) {}
  rpc BatchGetCuration(BatchGetCurationRequest) returns (BatchGetCurationResponse) {}
}

/**
* # `⚙︎ GetCuration`
* ```protobuf
*   rpc GetCuration(GetCurationRequest) returns (GetCurationResponse) {}
* ```
*
* Fetch a curation by its id and return the [`repeated stroeer.core.v1.Article`](Article.html) this
* curation contains. The response may be empty in case the curation does not contain any items.
*
* a `NOT_FOUND` status code will indicate the curation `id` does not exist.
*/
message GetCurationRequest {
  int64 id = 1;
}

message GetCurationResponse {
  repeated stroeer.core.v1.Article articles = 1;
}

/**
* # `⚙︎ BatchGetCuration`
* ```protobuf
*   rpc BatchGetCuration(BatchGetCurationRequest) returns (BatchGetCurationResponse) {}
* ```
*
* Fetch multiple curations by their id and return the [`repeated stroeer.core.v1.Article`](Article.html) those
* curations contain. The response may be empty in case the curation does not contain any items.
* The ordering of items will the same ordering as the `ids` requested.
*
*/
message BatchGetCurationRequest {
  repeated int64 id = 1;
}

message BatchGetCurationResponse {
  repeated GetCurationResponse curations = 1;
}
