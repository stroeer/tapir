syntax = "proto3";

/**
 * @FileArticle ⚙︎ CurationService
 */

package stroeer.curation.v1;

import "google/protobuf/timestamp.proto";
import "stroeer/core/v1/article.proto";

option go_package = "github.com/stroeer/go-tapir/curation/v1;core";
option java_multiple_files = true;
option java_package = "de.stroeer.curation.v1";

/**
```protobuf
* service CurationService {
*     // fetch a single curation by its `curation_id`
*     rpc GetCuration(GetCurationRequest) returns (GetCurationResponse) {}
*     // similar to GetCuration(), but retrieves multiple items at once (max == 100)
*     rpc BatchGetCuration(BatchGetCurationRequest) returns (BatchGetCurationResponse) {}
* }
```
*/
service CurationService {
  rpc GetCuration(GetCurationRequest) returns (GetCurationResponse) {}
  rpc BatchGetCuration(BatchGetCurationRequest) returns (BatchGetCurationResponse) {}
}

/**
# `⚙︎ GetCuration`
```protobuf
  rpc GetCuration(GetCurationRequest) returns (GetCurationResponse) {}
```

Fetch a curation by its id and return the [`repeated stroeer.core.v1.Article`](Article.html) this
curation contains. The response may be empty in case the curation does not contain any items.

a `NOT_FOUND` status code will indicate the curation `id` does not exist.

## GetCurationRequest
```protobuf
* message GetCurationRequest {
*     int64 id = 1;
* }
```

| Field name       | Type     | Description                                                 |
|------------------|----------|-------------------------------------------------------------|
| `id`             | `int64`  | [required] id of the list to be fetched                     |

*/

message GetCurationRequest {
  int64 id = 1;
}
/**
## GetCurationResponse
* ```protobuf
* message GetCurationResponse {
*    repeated stroeer.core.v1.Article articles = 1;
* }
* ```

| Field name       | Type                                | Description                                                                                                     |
|------------------|-------------------------------------|-----------------------------------------------------------------------------------------------------------------|
| `id`             | `int64`                             | the _id_ of this list                                                                                           |
| `label`          | `string`                            | the _label_ of this list                                                                                        |
| `update_time`    | [`Timestamp`][ts]                   | Technical timestamp at which the curation was updated in seconds UTC time since Unix epoch.                     |
| `articles`       | `repeated` [`Article`][article]     | curated items of this list                                                                                      |

[article]: article.html
[ts]:    https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Timestamp
*/
message GetCurationResponse {
  int64 id = 1;
  string label = 2;
  google.protobuf.Timestamp update_time = 3;
  repeated stroeer.core.v1.Article articles = 4;
}

/**
# `⚙︎ BatchGetCuration`
```protobuf
*   rpc BatchGetCuration(BatchGetCurationRequest) returns (BatchGetCurationResponse) {}
```

Fetch multiple curations by their id and return the [`repeated stroeer.core.v1.Article`](Article.html) those
curations contain. The response may be empty in case the curation does not contain any items.
The ordering of items will the same ordering as the `ids` requested.


## BatchGetCurationRequest
```protobuf
* message BatchGetCurationRequest {
*    repeated int64 id = 1;
* }
```

| Field name       | Type                                | Description                          |
|------------------|-------------------------------------|--------------------------------------|
| `ids`            | `repeated int64`                    | the _ids_ of the lists to be fetched |

*/
message BatchGetCurationRequest {
  repeated int64 id = 1;
}

/**
## BatchGetCurationResponse
```protobuf
* message BatchGetCurationResponse {
*   repeated GetCurationResponse curations = 1;
* }
```

| Field name       | Type                                | Description                                                                    |
|------------------|-------------------------------------|--------------------------------------------------------------------------------|
| `curations`      | [`GetCurationResponse`][cr]         | a single response item that corresponds to _ids_ this service was called with. |

[cr]: #getcurationresponse
*/

message BatchGetCurationResponse {
  repeated GetCurationResponse curations = 1;
}
