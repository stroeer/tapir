syntax = "proto3";

import "stroeer/page/section/v1/section_page.proto";

package stroeer.content.v1;

option go_package = "github.com/stroeer/tapir/go/stroeer/content/v1;content";
option java_multiple_files = true;
option java_package = "de.stroeer.content.v1";

service ContentService {
  /**
    ############################################################################
    # Description
    ############################################################################
    Get single stages by requesting them via agreed tokens, e.g. "schlagzeilen".

    ############################################################################
    # Status/Error scenario's
    ############################################################################

    scenario: found
    description: service responded without encountering exceptions
    gRPC status: OK
    gRPC error payload: none
    HTTP status: OK
    cacheable: yes

    scenario: internal
    description: internal error while loading data
    gRPC status: INTERNAL
    gRPC error payload: none
    HTTP status: 500
    cacheable: no

    scenario: timeout
    description: timeout while loading data
    gRPC status: DEADLINE_EXCEEDED
    gRPC error payload: none
    HTTP status: 504
    cacheable: no
  **/
  rpc GetStages (GetStagesRequest) returns (GetStagesResponse) {
  }
}

// Message to request stages independent of SectionPages
message GetStagesRequest {
  // a stage_id is a token which is agreed between frontend and backend, for example "schlagzeilen"
  repeated string stage_ids = 1;
}

// Message for requesting data for single stages
// All tokens from the stage_ids that could be resolved to stages are part of the response, others are omitted.
message GetStagesResponse {
  repeated stroeer.page.section.v1.Stage stages = 1;
}

