// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package section

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WebSectionServiceClient is the client API for WebSectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WebSectionServiceClient interface {
	GetWebSectionPage(ctx context.Context, in *GetWebSectionPageRequest, opts ...grpc.CallOption) (*GetWebSectionPageResponse, error)
}

type webSectionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWebSectionServiceClient(cc grpc.ClientConnInterface) WebSectionServiceClient {
	return &webSectionServiceClient{cc}
}

func (c *webSectionServiceClient) GetWebSectionPage(ctx context.Context, in *GetWebSectionPageRequest, opts ...grpc.CallOption) (*GetWebSectionPageResponse, error) {
	out := new(GetWebSectionPageResponse)
	err := c.cc.Invoke(ctx, "/stroeer.web.section.v1.WebSectionService/GetWebSectionPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebSectionServiceServer is the server API for WebSectionService service.
// All implementations must embed UnimplementedWebSectionServiceServer
// for forward compatibility
type WebSectionServiceServer interface {
	GetWebSectionPage(context.Context, *GetWebSectionPageRequest) (*GetWebSectionPageResponse, error)
	mustEmbedUnimplementedWebSectionServiceServer()
}

// UnimplementedWebSectionServiceServer must be embedded to have forward compatible implementations.
type UnimplementedWebSectionServiceServer struct {
}

func (*UnimplementedWebSectionServiceServer) GetWebSectionPage(context.Context, *GetWebSectionPageRequest) (*GetWebSectionPageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebSectionPage not implemented")
}
func (*UnimplementedWebSectionServiceServer) mustEmbedUnimplementedWebSectionServiceServer() {}

func RegisterWebSectionServiceServer(s *grpc.Server, srv WebSectionServiceServer) {
	s.RegisterService(&_WebSectionService_serviceDesc, srv)
}

func _WebSectionService_GetWebSectionPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWebSectionPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebSectionServiceServer).GetWebSectionPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stroeer.web.section.v1.WebSectionService/GetWebSectionPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebSectionServiceServer).GetWebSectionPage(ctx, req.(*GetWebSectionPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebSectionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stroeer.web.section.v1.WebSectionService",
	HandlerType: (*WebSectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWebSectionPage",
			Handler:    _WebSectionService_GetWebSectionPage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stroeer/web/section/v1/web_section_service.proto",
}
