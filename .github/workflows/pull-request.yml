name: pull-request

on:
  pull_request:
    branches:
      - master

jobs:
  buf:
    runs-on: ubuntu-latest
    container: bufbuild/buf
    env:
      BUF_INPUT_HTTPS_USERNAME: $GITHUB_ACTOR
      BUF_INPUT_HTTPS_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: lint
        run: buf lint

      - name: check breaking change
        id: buf_breaking
        run: |
          buf breaking --against 'https://github.com/stroeer/tapir.git#branch=master' --config buf.yaml > message.txt || true
          echo "::set-output name=message::$(cat message.txt)"
          if [ -s message.txt ]; then
            echo ::set-output name=failed::'true';
          fi

      - if: steps.buf_breaking.outputs.failed == 'true'
        name: comment PR
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ## :fire: Breaking Changes
            ```
            ${{ steps.buf_breaking.outputs.message }}
            ```
          check_for_duplicate_msg: false

  java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: 11
          java-package: jdk

      - run: make LANGUAGE=java

      - name: build
        run: ./gradlew clean build
        working-directory: java

  node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"

      - name: npm ci
        run: npm ci
        working-directory: node

      - run: make LANGUAGE=node

      - name: Run node checks
        run: npm run checks
        working-directory: node

  go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2

      - run: make LANGUAGE=go

      - run: make gateway

      - name: go test
        run: go test -v .
        working-directory: go

      - name: Verifies clean working directory
        run: |
          if output=$(git status --porcelain) && [ -z "$output" ]; then
            echo "Go source code is up-to-date";
          else
            echo "Detected changes in generated Go source code!";
            exit 1;
          fi
